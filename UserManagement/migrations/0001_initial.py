# Generated by Django 2.0.2 on 2018-06-22 08:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='部门')),
                ('superior', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='UserManagement.Department', verbose_name='上级部门')),
            ],
            options={
                'verbose_name': '部门',
                'verbose_name_plural': '部门列表',
                'permissions': (('view_dept', '可以查看部门'), ('create_dept', '可以创建部门'), ('update_dept', '可以修改部门'), ('delete_dept', '可以删除部门')),
            },
        ),
        migrations.CreateModel(
            name='Duty_Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='UserManagement.Department', verbose_name='部门')),
            ],
            options={
                'verbose_name': '职务',
                'verbose_name_plural': '职务-部门对照表',
                'permissions': (('view_duty_departments', '可以查看部门职务'), ('create_duty_department', '可以创建部门职务'), ('update_duty_departments', '可以修改部门职务'), ('delete_duty_departments', '可以删除部门职务')),
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='专业')),
            ],
            options={
                'verbose_name': '专业',
                'verbose_name_plural': '专业列表',
                'permissions': (('view_majors', '可以查看专业'), ('create_major', '可以增加专业'), ('update_majors', '可以修改专业'), ('delete_majors', '可以删除专业')),
            },
        ),
        migrations.CreateModel(
            name='Student_Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='班级')),
            ],
            options={
                'verbose_name': '班级',
                'verbose_name_plural': '班级列表',
                'permissions': (('view_class', '可以查看班级'), ('create_class', '可以增加班级'), ('update_class', '可以修改班级'), ('delete_class', '可以删除班级')),
            },
        ),
        migrations.CreateModel(
            name='Student_Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='年级')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserManagement.Major', verbose_name='专业')),
            ],
            options={
                'verbose_name': '年级',
                'verbose_name_plural': '年级列表',
                'permissions': (('view_grade', '可以查看年级'), ('create_grade', '可以增加年级'), ('update_grade', '可以修改年级'), ('delete_grade', '可以删除年级')),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.CharField(max_length=12, primary_key=True, serialize=False, verbose_name='学工号')),
                ('name', models.CharField(max_length=10, verbose_name='姓名')),
                ('pwd', models.CharField(max_length=25, verbose_name='密码')),
                ('stat', models.BooleanField(default=True, verbose_name='用户状态')),
                ('name_used_before', models.CharField(blank=True, max_length=10, null=True, verbose_name='曾用名')),
                ('sex', models.IntegerField(choices=[(0, '男'), (1, '女')], verbose_name='性别')),
                ('birthday', models.DateField(verbose_name='出生日期')),
                ('political', models.IntegerField(choices=[(1, '中共党员'), (2, '中共预备党员'), (3, '共青团员'), (4, '民革党员'), (5, '民盟盟员'), (6, '民建会员'), (7, '民进会员'), (8, '农工党党员'), (9, '致公党党员'), (10, '九三学社社员'), (11, '台盟盟员'), (12, '无党派人士'), (13, '群众')], verbose_name='政治面貌')),
                ('native_place', models.CharField(max_length=5, verbose_name='籍贯')),
                ('id_number', models.CharField(max_length=20, verbose_name='身份证号')),
                ('phone_number', models.CharField(max_length=20, verbose_name='电话')),
                ('country_and_region', models.CharField(choices=[('AD', 'AD安道尔'), ('AE', 'AE阿联酋'), ('AF', 'AF阿富汗'), ('AG', 'AG安提瓜和巴布达'), ('AI', 'AI安圭拉'), ('AL', 'AL阿尔巴尼亚'), ('AM', 'AM亚美尼亚'), ('AO', 'AO安哥拉'), ('AR', 'AR阿根廷'), ('AT', 'AT奥地利'), ('AU', 'AU澳大利亚'), ('AW', 'AW阿鲁巴'), ('AZ', 'AZ阿塞拜疆'), ('BA', 'BA波黑'), ('BB', 'BB巴巴多斯'), ('BD', 'BD孟加拉'), ('BE', 'BE比利时'), ('BF', 'BF布基纳法索'), ('BG', 'BG保加利亚'), ('BH', 'BH巴林'), ('BI', 'BI布隆迪'), ('BJ', 'BJ贝宁'), ('BM', 'BM百慕大'), ('BN', 'BN文莱'), ('BO', 'BO玻利维亚'), ('BR', 'BR巴西'), ('BS', 'BS巴哈马'), ('BT', 'BT不丹'), ('BV', 'BV挪威布韦岛'), ('BW', 'BW博茨瓦纳'), ('BY', 'BY白俄罗斯'), ('BZ', 'BZ伯利兹'), ('CA', 'CA加拿大'), ('CF', 'CF中非共和国'), ('CG', 'CG刚果'), ('CH', 'CH瑞士'), ('CI', 'CI科特迪瓦'), ('CK', 'CK库克群岛'), ('CL', 'CL智利'), ('CM', 'CM喀麦隆'), ('CN', 'CN中国'), ('CO', 'CO哥伦比亚'), ('CR', 'CR哥斯达黎加'), ('CU', 'CU古巴'), ('CV', 'CV佛得角'), ('CX', 'CX澳大利亚圣诞岛'), ('CY', 'CY塞浦路斯'), ('CZ', 'CZ捷克共和国'), ('DE', 'DE德国'), ('DJ', 'DJ吉布提'), ('DK', 'DK丹麦'), ('DM', 'DM多明哥'), ('DO', 'DO多米尼加'), ('DZ', 'DZ阿尔及利亚'), ('EC', 'EC厄瓜多尔'), ('EE', 'EE爱沙尼亚'), ('EG', 'EG埃及'), ('EH', 'EH西撒哈拉'), ('ES', 'ES西班牙'), ('ET', 'ET埃塞俄比亚'), ('FI', 'FI芬兰'), ('FJ', 'FJ斐济'), ('FK', 'FK福克兰群岛'), ('FM', 'FM密克罗尼西亚'), ('FR', 'FR法国'), ('GA', 'GA加蓬'), ('GB', 'GB英国'), ('GD', 'GD格林纳达'), ('GE', 'GE格鲁吉亚'), ('GF', 'GF法属圭亚那'), ('GH', 'GH加纳'), ('GI', 'GI直布罗陀'), ('GL', 'GL格陵兰'), ('GM', 'GM冈比亚'), ('GN', 'GN几内亚'), ('GP', 'GP瓜德罗普'), ('GQ', 'GQ赤道几内亚'), ('GR', 'GR希腊'), ('GT', 'GT危地马拉'), ('GU', 'GU关岛'), ('GW', 'GW几内亚比绍'), ('GY', 'GY圭亚那'), ('HK', 'HK中国香港'), ('HN', 'HN洪都拉斯'), ('HR', 'HR克罗地亚'), ('HT', 'HT海地'), ('HU', 'HU匈牙利'), ('ID', 'ID印度尼西亚'), ('IE', 'IE爱尔兰'), ('IL', 'IL以色列'), ('IN', 'IN印度'), ('IQ', 'IQ伊拉克'), ('IR', 'IR伊朗'), ('IS', 'IS冰岛'), ('IT', 'IT意大利'), ('JM', 'JM牙买加'), ('JO', 'JO约旦'), ('JP', 'JP日本'), ('KE', 'KE肯尼亚'), ('KG', 'KG吉尔吉斯斯坦'), ('KH', 'KH柬埔寨'), ('KI', 'KI基里巴斯'), ('KM', 'KM科摩罗'), ('KP', 'KP朝鲜'), ('KR', 'KR韩国'), ('KW', 'KW科威特'), ('KY', 'KY开曼群岛'), ('KZ', 'KZ哈萨克斯坦'), ('LA', 'LA老挝'), ('LB', 'LB黎巴嫩'), ('LC', 'LC圣卢西亚'), ('LI', 'LI列支敦士登'), ('LK', 'LK斯里兰卡'), ('LR', 'LR利比里亚'), ('LS', 'LS莱索托'), ('LT', 'LT立陶宛'), ('LU', 'LU卢森堡'), ('LV', 'LV拉托维亚'), ('LY', 'LY利比亚'), ('MA', 'MA摩洛哥'), ('MD', 'MD摩尔多瓦'), ('MG', 'MG马达加斯加'), ('MH', 'MH马绍尔群岛'), ('ML', 'ML马里'), ('MM', 'MM缅甸'), ('MN', 'MN蒙古'), ('MO', 'MO中国澳门'), ('MR', 'MR毛里塔尼亚'), ('MT', 'MT马耳他'), ('MU', 'MU毛里求斯'), ('MV', 'MV马尔代夫'), ('MW', 'MW马拉维'), ('MX', 'MX墨西哥'), ('MY', 'MY马来西亚'), ('MZ', 'MZ莫桑比克'), ('NA', 'NA纳米比亚'), ('NC', 'NC新喀里多尼亚'), ('NE', 'NE尼日尔'), ('NG', 'NG尼日利亚'), ('NI', 'NI尼加拉瓜'), ('NL', 'NL荷兰'), ('NO', 'NO挪威'), ('NP', 'NP尼泊尔'), ('NR', 'NR瑙鲁'), ('NU', 'NU纽埃'), ('NZ', 'NZ新西兰'), ('OM', 'OM阿曼'), ('PA', 'PA巴拿马'), ('PE', 'PE秘鲁'), ('PF', 'PF法属玻里尼西亚'), ('PG', 'PG巴布亚新几内亚'), ('PH', 'PH菲律宾'), ('PK', 'PK巴基斯坦'), ('PL', 'PL波兰'), ('PN', 'PN皮特开恩群岛'), ('PT', 'PT葡萄牙'), ('PW', 'PW帕劳'), ('PY', 'PY巴拉圭'), ('QA', 'QA卡塔尔'), ('RO', 'RO罗马尼亚'), ('RU', 'RU俄罗斯'), ('RW', 'RW卢旺达'), ('SA', 'SA沙特阿拉伯'), ('SB', 'SB所罗门群岛'), ('SC', 'SC塞舌尔'), ('SD', 'SD苏丹'), ('SE', 'SE瑞典'), ('SG', 'SG新加坡'), ('SH', 'SH圣赫勒那'), ('SI', 'SI斯洛文尼亚'), ('SK', 'SK斯洛伐克'), ('SL', 'SL塞拉利昂'), ('SM', 'SM圣马力诺'), ('SN', 'SN塞内加尔'), ('SO', 'SO索马里'), ('SR', 'SR苏里南'), ('ST', 'ST圣多美与普林西比'), ('SV', 'SV萨尔瓦多'), ('SY', 'SY叙利亚'), ('SZ', 'SZ斯威士兰'), ('TD', 'TD乍得'), ('TF', 'TF法属南方领土'), ('TG', 'TG多哥'), ('TH', 'TH泰国'), ('TJ', 'TJ塔吉克斯坦'), ('TK', 'TK托克劳'), ('TM', 'TM土库曼斯坦'), ('TN', 'TH突尼斯'), ('TO', 'TO汤加'), ('TP', 'TP东帝汶'), ('TR', 'TR土尔其'), ('TT', 'TT特立尼达和多巴哥'), ('TV', 'TV图瓦卢'), ('TW', 'TW中国台湾'), ('TZ', 'TZ坦桑尼亚'), ('UA', 'UA乌克兰'), ('UG', 'UG乌干达'), ('UK', 'UK英国'), ('US', 'US美国'), ('UY', 'UY乌拉圭'), ('UZ', 'UZ乌兹别克斯坦'), ('VA', 'VA梵蒂冈'), ('VE', 'VE委内瑞拉'), ('VN', 'VN越南'), ('WS', 'WS西萨摩亚'), ('YE', 'YE也门'), ('YU', 'YU南斯拉夫'), ('ZA', 'ZA南非'), ('ZM', 'ZM赞比亚'), ('ZR', 'ZR扎伊尔'), ('ZW', 'ZW津巴布韦')], default='CN', max_length=3, verbose_name='国家或地区')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户列表',
                'permissions': (('view_my_users', '可以查看自己创建的用户'), ('view_class_users', '可以查看自己班级的用户'), ('view_grade_users', '可以查看自己年级的用户'), ('view_all_users', '可以查看所有用户'), ('create_user', '可以增加用户'), ('update_my_users', '可以修改自己创建的用户'), ('update_class_users', '可以修改自己班级的用户'), ('update_grade_users', '可以修改自己年级的用户'), ('update_all_users', '可以修改所有用户'), ('delete_my_users', '可以删除自己创建的用户'), ('delete_class_users', '可以删除自己班级的用户'), ('delete_grade_users', '可以删除自己年级的用户'), ('delete_all_users', '可以删除所有用户')),
            },
        ),
        migrations.CreateModel(
            name='User_Duty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='职务')),
            ],
            options={
                'verbose_name': '用户职务',
                'verbose_name_plural': '用户-职务对照表',
                'permissions': (('view_user_duties', '可以查看用户职务'), ('create_user_duty', '可以创建用户职务'), ('update_user_duties', '可以修改用户职务'), ('delete_user_duties', '可以删除用户职务')),
            },
        ),
        migrations.CreateModel(
            name='Graduate_Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='UserManagement.User')),
                ('on_the_job', models.BooleanField(verbose_name='是否在职')),
                ('company', models.CharField(blank=True, max_length=50, null=True, verbose_name='工作单位')),
            ],
            options={
                'verbose_name': '研究生',
                'verbose_name_plural': '研究生列表',
                'permissions': (('view_my_gs', '可以查看自己创建的研究生'), ('view_class_gs', '可以查看自己班级的研究生'), ('view_grade_gs', '可以查看自己年级的研究生'), ('view_teacher_gs', '可以查看自己导师的研究生'), ('view_all_gs', '可以查看所有研究生'), ('create_gs', '可以增加研究生'), ('update_my_gs', '可以修改自己创建的研究生'), ('update_class_gs', '可以修改自己班级的研究生'), ('update_grade_gs', '可以修改自己年级的研究生'), ('update_teacher_gs', '可以修改自己导师的研究生'), ('update_all_gs', '可以修改所有研究生'), ('delete_my_gs', '可以删除自己创建的研究生'), ('delete_class_gs', '可以删除自己班级的研究生'), ('delete_grade_gs', '可以删除自己年级的研究生'), ('delete_teacher_gs', '可以删除自己导师的研究生'), ('delete_all_gs', '可以删除所有研究生')),
            },
            bases=('UserManagement.user',),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='UserManagement.User')),
                ('title', models.CharField(choices=[('教授', '教授'), ('副教授', '副教授'), ('讲师', '讲师'), ('助教', '助教'), ('中专高级讲师', '中专高级讲师'), ('中专讲师', '中专讲师'), ('中专助理讲师', '中专助理讲师'), ('高级主教练', '高级主教练'), ('中教高级', '中教高级'), ('中教一级', '中教一级'), ('中教二级', '中教二级'), ('研究员', '研究员'), ('副研究员', '副研究员'), ('助理研究员', '助理研究员'), ('高级实验师', '高级实验师'), ('实验师', '实验师'), ('助理实验师', '助理实验师'), ('实验员', '实验员'), ('高级工程师', '高级工程师'), ('工程师', '工程师'), ('助理工程师', '助理工程师'), ('技术员', '技术员'), ('高级经济师', '高级经济师'), ('经济师', '经济师'), ('助理经济师', '助理经济师'), ('经济员', '经济员'), ('高级审计师', '高级审计师'), ('审计师', '审计师'), ('小教高级', '小教高级'), ('幼教高级', '幼教高级'), ('主任技师', '主任技师'), ('副主任技师', '副主任技师'), ('高级政工师', '高级政工师'), ('政工师', '政工师'), ('助理政工师', '助理政工师'), ('政工员', '政工员'), ('工人', '工人'), ('中级工', '中级工'), ('高级工', '高级工'), ('院士', '院士')], max_length=10, verbose_name='职称')),
                ('is_external_unit', models.BooleanField(default=False, verbose_name='是否外聘')),
            ],
            options={
                'verbose_name': '教师',
                'verbose_name_plural': '教师列表',
                'permissions': (('view_my_teachers', '可以查看自己创建的教师用户'), ('view_department_teachers', '可以查看自己部门的教师用户'), ('view_all_teachers', '可以查看所有教师用户'), ('create_teacher', '可以增加教师用户'), ('update_my_teachers', '可以修改自己创建的教师用户'), ('update_department_teachers', '可以修改自己部门的教师用户'), ('update_all_teachers', '可以修改所有教师用户'), ('delete_my_teachers', '可以删除自己创建的教师用户'), ('delete_department_teachers', '可以删除自己部门的教师用户'), ('delete_all_teachers', '可以删除所有教师用户')),
            },
            bases=('UserManagement.user',),
        ),
        migrations.CreateModel(
            name='Undergraduate_Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='UserManagement.User')),
            ],
            options={
                'verbose_name': '本科生',
                'verbose_name_plural': '本科生列表',
                'permissions': (('view_my_us', '可以查看自己创建的本科生'), ('view_class_us', '可以查看自己班级的本科生'), ('view_grade_us', '可以查看自己年级的本科生'), ('view_all_us', '可以查看所有本科生'), ('create_us', '可以增加本科生'), ('update_my_us', '可以修改自己创建的本科生'), ('update_class_us', '可以修改自己班级的本科生'), ('update_grade_us', '可以修改自己年级的本科生'), ('update_all_us', '可以修改所有本科生'), ('delete_my_us', '可以删除自己创建的本科生'), ('delete_class_us', '可以删除自己班级的本科生'), ('delete_grade_us', '可以删除自己年级的本科生'), ('delete_all_us', '可以删除所有本科生')),
            },
            bases=('UserManagement.user',),
        ),
        migrations.AddField(
            model_name='user_duty',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='UserManagement.User', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='user',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='UserManagement.User', verbose_name='用户创建者'),
        ),
        migrations.AddField(
            model_name='student_class',
            name='grade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='UserManagement.Student_Grade', verbose_name='年级'),
        ),
        migrations.AddField(
            model_name='duty_department',
            name='duty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='职务'),
        ),
        migrations.AlterUniqueTogether(
            name='user_duty',
            unique_together={('user', 'duty')},
        ),
        migrations.AddField(
            model_name='undergraduate_student',
            name='student_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='UserManagement.Student_Class', verbose_name='班级'),
        ),
        migrations.AlterUniqueTogether(
            name='student_grade',
            unique_together={('name', 'major')},
        ),
        migrations.AddField(
            model_name='student_class',
            name='headmaster',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='headmaster_teacher', to='UserManagement.Teacher', verbose_name='班导师'),
        ),
        migrations.AddField(
            model_name='student_class',
            name='instructor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='instructor_teacher', to='UserManagement.Teacher', verbose_name='辅导员'),
        ),
        migrations.AddField(
            model_name='graduate_student',
            name='instructor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='UserManagement.Teacher', verbose_name='导师'),
        ),
        migrations.AddField(
            model_name='graduate_student',
            name='student_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='UserManagement.Student_Class', verbose_name='班级'),
        ),
        migrations.AlterUniqueTogether(
            name='duty_department',
            unique_together={('duty', 'department')},
        ),
        migrations.AlterUniqueTogether(
            name='student_class',
            unique_together={('name', 'grade')},
        ),
    ]
